name: Pipeline Caller

on:
  push:
    branches: [ non-prod, main, master ]
    paths-ignore:
      - '.github/**'
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  write-all

jobs:
  precheck:
    if: >-
      ${{ !(
            (github.event_name == 'push' &&
             contains(github.event.head_commit.message, '[skip cicd]'))
            ) }}
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    steps:
      - name: Freeze Dev if a PR from non-prod → main/master is open
        id: check
        shell: bash
        env:
          API:   ${{ github.api_url }}
          REPO:  ${{ github.repository }}
          OWNER: ${{ github.repository_owner }}
          TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          SKIP=false
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "non-prod" ]]; then
            total=0
            for base in main master; do
              url="$API/repos/$REPO/pulls?state=open&head=$OWNER:non-prod&base=$base&per_page=1"
              cnt=$(curl -sS -H "Authorization: Bearer $TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" "$url" \
                    | jq 'length' 2>/dev/null || echo 0)
              total=$(( total + cnt ))
            done
            [[ $total -gt 0 ]] && SKIP=true
            echo "Detected $total open PR(s) from non-prod → main/master; skip=$SKIP"
          fi
          echo "skip=$SKIP" >> "$GITHUB_OUTPUT"

  pipeline:
    needs: [ precheck ]
    if: >-
      ${{ !(
            (github.event_name == 'push' &&
             contains(github.event.head_commit.message, '[skip cicd]'))
          ) &&
          !(github.event_name == 'push' &&
            github.ref_name == 'non-prod' &&
            needs.precheck.outputs.skip == 'true') }}

    uses: dhillon-shawn/Local-Uipath-CICD/.github/workflows/pipeline.yml@main
    secrets: inherit
    with:
      target_env: >-
        ${{ (github.event_name == 'push' &&
              fromJson('{"non-prod":"dev","main":"prod","master":"prod"}')[github.ref_name]
            ) || (github.event_name == 'pull_request' &&
              (startsWith(github.head_ref, 'hotfix/') && 'hotfix' || 'test')
            ) }}
      source_ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
